import Head from 'next/head';
import { useEffect, useRef, useState } from 'react';
import Layout from '@components/Layout';
import Container from '@components/Container';
import Button from '@components/Button';

import styles from '@styles/Home.module.scss';
import Webcam from "react-webcam";


export default function Home() {

  const [ImageSrc, setImageSrc] = useState();
  const [cldData, setcldData] = useState();
  const webcamRef = useRef();

  useEffect(() => {
    if (!ImageSrc) return
    (async function run() {
      const response = await fetch('/api/cloudinary/upload', {
        method: 'POST',
        body: JSON.stringify({
          image: ImageSrc
        })

      }).then((r)=>r.json())
      setcldData(response)
      console.log(response);
    })()
  
    

  }, [ImageSrc])

  function handleCaptureScreenshot() {
    const imageSrc = webcamRef.current.getScreenshot();
    setImageSrc(imageSrc);
  }

  const cameraWidth = 720;
  const cameraHeight = 720;
  const aspectRatio = cameraWidth / cameraHeight;

  const videoConstraints = {
    width: {
      min: cameraWidth
    },
    height: {
      min: cameraHeight
    },
    aspectRatio
  };

const src = cldData?.secure_url || ImageSrc


  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <div className={styles.camera}>

          <div className={styles.stageContainer}>
            <div className={styles.stage}>
              {/* <img src="" /> */}
              {src && (
                <img src={src} />
              )}

              {!src && (
                <Webcam ref={webcamRef} videoConstraints={videoConstraints} width={cameraWidth} height={cameraHeight} />
              )}            </div>
          </div>

          <div className={styles.controls}>
            <ul>
              <li>
                <Button onClick={handleCaptureScreenshot}>
                  Capture photo
                </Button>
              </li>
              <li>
                <Button color="red" onClick={() => setImage(undefined)}>
                  Reset
                </Button>
              </li>
            </ul>
          </div>
        </div>

        {/* <div className={styles.effects}>
          <h2>Filters</h2>
          <ul className={styles.filters}>
            <li data-is-active-filter={false}>
              <button className={styles.filterThumb}>
                <img width="100" height="100" src="/images/mountain-100x100.jpg" alt="Filter Name" />
                <span>Filter Name</span>
              </button>
            </li>
          </ul>
        </div> */}
      </Container>
    </Layout>
  )
}